[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "roboml"
version = "0.2.3"
description = "Machine learning models optimized for robotics experimentation and deployment"
authors = [{ name = "Automatika Robotics", email = "contact@automatikarobotics.com" }]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",]

keywords = ["robots", "robotics", "machine learning", "multimodal", "deep learning"]

dependencies = [
    "accelerate",
    "transformers",
    "bitsandbytes ; platform_machine == 'x86_64'",
    "pillow",
    "msgpack",
    "msgpack_numpy",
    "hiredis",
    "ray[serve]",
    "sentencepiece",
    "datasets",
    "scipy",
    "sentence-transformers",
    "chromadb",
    "ninja",
    "packaging",
]

requires-python = ">=3.10"

[project.optional-dependencies]
dev = ["httpx", "pip-tools", "pytest", "pre-commit", "black", "redis"]
vision = ["mmengine", "platformdirs", "norfair", "mmdeploy==1.3.1 ; platform_machine == 'x86_64'", "mmdeploy-runtime-gpu==1.3.1 ; platform_machine == 'x86_64'", "pycuda", "opencv-python-headless"]

[project.scripts]
roboml = "roboml.main:ray"
roboml-resp = "roboml.main:resp"

[project.urls]
Homepage = "https://github.com/automatika-robotics/roboml"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
log_cli = true
log_cli_level = "INFO"
log_cli_format="[%(levelname)s] [%(asctime)s] [%(name)s] [%(process)d-%(thread)d] %(message)s"
testpaths = [
    "tests"
]
markers = ["module(module_name): mark test to pass module name to fixture"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
quiet = false
whitelist-regex = []
color = true
generate-badge = "."
badge-format = "svg"

[tool.ruff]
extend-exclude = [".mypy_cache", ".tox", ".venv", "buck-out", "build", ".pytest_cache"]
fix = true
line-length = 88
preview = true
[tool.ruff.lint]
ignore = ["E203", "E266", "E501", "F403", "F401"]
select = ["B","C","E","F","W","B9"]
[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.bumpver]
current_version = "0.2.3"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "(chore) bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
]
